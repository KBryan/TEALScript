#pragma version 8
	b main

getSum:
	proto 3 1

	// examples/calculator/calculator.algo.ts:6
	// return a + b;
	frame_dig -1 // a: uint64
	frame_dig -2 // b: uint64
	+
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

getDifference:
	proto 3 1

	// examples/calculator/calculator.algo.ts:10
	// return a >= b ? a - b : b - a;
	frame_dig -1 // a: uint64
	frame_dig -2 // b: uint64
	>=
	bz ternary0_false
	frame_dig -1 // a: uint64
	frame_dig -2 // b: uint64
	-
	b ternary0_end

ternary0_false:
	frame_dig -2 // b: uint64
	frame_dig -1 // a: uint64
	-

ternary0_end:
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

abi_route_doMath:
	txn OnCompletion
	int NoOp
	==
	txn ApplicationID
	int 0
	!=
	&&
	assert
	byte 0x
	dupn 1
	txna ApplicationArgs 3
	extract 2 0
	txna ApplicationArgs 2
	btoi
	txna ApplicationArgs 1
	btoi
	callsub doMath
	int 1
	return

doMath:
	proto 4 0

	// if0_condition
	// examples/calculator/calculator.algo.ts:14
	// operation === 'sum'
	frame_dig -3 // operation: bytes
	byte "sum"
	==
	bz if0_end

	// if0_consequent
	// examples/calculator/calculator.algo.ts:15
	// return this.getSum(a, b);
	byte 0x
	dupn 1
	frame_dig -2 // b: uint64
	frame_dig -1 // a: uint64
	callsub getSum
	itob
	byte 0x151f7c75
	swap
	concat
	log

if0_end:
	// if1_condition
	// examples/calculator/calculator.algo.ts:16
	// operation === 'difference'
	frame_dig -3 // operation: bytes
	byte "difference"
	==
	bz if1_end

	// if1_consequent
	// examples/calculator/calculator.algo.ts:17
	// return this.getDifference(a, b);
	byte 0x
	dupn 1
	frame_dig -2 // b: uint64
	frame_dig -1 // a: uint64
	callsub getDifference
	itob
	byte 0x151f7c75
	swap
	concat
	log

if1_end:
	err // 'Invalid operation'
	retsub

main:
	txn NumAppArgs
	bnz route_abi

route_abi:
	method "doMath(uint64,uint64,string)uint64"
	txna ApplicationArgs 0
	match abi_route_doMath