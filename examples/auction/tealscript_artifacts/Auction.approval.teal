#pragma version 9

txn ApplicationID
int 0
>
int 6
*
txn OnCompletion
+
switch create_NoOp create_OptIn NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED create_DeleteApplication call_NoOp call_OptIn NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED

NOT_IMPLEMENTED:
	err

abi_route_create:
	// no dupn needed
	callsub create
	int 1
	return

create:
	proto 0 0

	// examples/auction/auction.algo.ts:19
	// this.auctionEnd.set(0)
	byte "auctionEnd"
	int 0
	app_global_put

	// examples/auction/auction.algo.ts:20
	// this.previousBid.set(0)
	byte "previousBid"
	int 0
	app_global_put

	// examples/auction/auction.algo.ts:21
	// this.asaAmt.set(0)
	byte "asaAmt"
	int 0
	app_global_put

	// examples/auction/auction.algo.ts:22
	// this.asa.set(Asset.zeroIndex)
	byte "asa"
	int 0
	app_global_put

	// examples/auction/auction.algo.ts:25
	// this.previousBidder.set(globals.zeroAddress)
	byte "previousBidder"
	global ZeroAddress
	app_global_put
	retsub

abi_route_optIntoAsset:
	// no dupn needed
	txna ApplicationArgs 1
	btoi
	txnas Assets
	callsub optIntoAsset
	int 1
	return

optIntoAsset:
	proto 1 0

	// Only allow app creator to opt the app account into a ASA
	// examples/auction/auction.algo.ts:30
	// assert(this.txn.sender === globals.creatorAddress)
	txn Sender
	global CreatorAddress
	==
	assert

	// Verify a ASA hasn't already been opted into
	// examples/auction/auction.algo.ts:33
	// assert(this.asa.get() === Asset.zeroIndex)
	byte "asa"
	app_global_get
	int 0
	==
	assert

	// Save ASA ID in global state
	// examples/auction/auction.algo.ts:36
	// this.asa.set(asset)
	byte "asa"
	frame_dig -1 // asset: asset
	app_global_put

	// Submit opt-in transaction: 0 asset transfer to self
	// examples/auction/auction.algo.ts:39
	// sendAssetTransfer({
	itxn_begin
	int axfer
	itxn_field TypeEnum

	// examples/auction/auction.algo.ts:40
	// assetReceiver: this.app.address
	txna Applications 0
	app_params_get AppAddress
	assert
	itxn_field AssetReceiver

	// examples/auction/auction.algo.ts:41
	// xferAsset: asset
	frame_dig -1 // asset: asset
	itxn_field XferAsset

	// examples/auction/auction.algo.ts:42
	// assetAmount: 0
	int 0
	itxn_field AssetAmount

	// examples/auction/auction.algo.ts:43
	// fee: 0
	int 0
	itxn_field Fee
	itxn_submit
	retsub

abi_route_startAuction:
	// no dupn needed
	txn GroupIndex
	int 1
	-
	txna ApplicationArgs 2
	btoi
	txna ApplicationArgs 1
	btoi
	callsub startAuction
	int 1
	return

startAuction:
	proto 3 0

	// examples/auction/auction.algo.ts:48
	// assert(this.txn.sender === globals.creatorAddress)
	txn Sender
	global CreatorAddress
	==
	assert

	// Ensure the auction hasn't already been started
	// examples/auction/auction.algo.ts:51
	// assert(this.auctionEnd.get() === 0)
	byte "auctionEnd"
	app_global_get
	int 0
	==
	assert

	// Verify axfer
	// examples/auction/auction.algo.ts:54
	// assert(axfer.assetReceiver === this.app.address)
	frame_dig -3 // axfer: axfer
	gtxns AssetReceiver
	txna Applications 0
	app_params_get AppAddress
	assert
	==
	assert

	// Set global state
	// examples/auction/auction.algo.ts:57
	// this.asaAmt.set(axfer.assetAmount)
	byte "asaAmt"
	frame_dig -3 // axfer: axfer
	gtxns AssetAmount
	app_global_put

	// examples/auction/auction.algo.ts:58
	// this.auctionEnd.set(globals.latestTimestamp + length)
	byte "auctionEnd"
	global LatestTimestamp
	frame_dig -2 // length: uint64
	+
	app_global_put

	// examples/auction/auction.algo.ts:59
	// this.previousBid.set(startingPrice)
	byte "previousBid"
	frame_dig -1 // startingPrice: uint64
	app_global_put
	retsub

pay:
	proto 2 0

	// examples/auction/auction.algo.ts:63
	// sendPayment({
	itxn_begin
	int pay
	itxn_field TypeEnum

	// examples/auction/auction.algo.ts:64
	// receiver: receiver
	frame_dig -1 // receiver: account
	itxn_field Receiver

	// examples/auction/auction.algo.ts:65
	// amount: amount
	frame_dig -2 // amount: uint64
	itxn_field Amount

	// examples/auction/auction.algo.ts:66
	// fee: 0
	int 0
	itxn_field Fee
	itxn_submit
	retsub

abi_route_optIn:
	// no dupn needed
	callsub optIn
	int 1
	return

optIn:
	proto 0 0
	retsub

abi_route_bid:
	// no dupn needed
	txn GroupIndex
	int 1
	-
	callsub bid
	int 1
	return

bid:
	proto 1 0

	// Ensure auction hasn't ended
	// examples/auction/auction.algo.ts:76
	// assert(globals.latestTimestamp < this.auctionEnd.get())
	global LatestTimestamp
	byte "auctionEnd"
	app_global_get
	<
	assert

	// Verify payment transaction
	// examples/auction/auction.algo.ts:79
	// assert(payment.amount > this.previousBid.get())
	frame_dig -1 // payment: pay
	gtxns Amount
	byte "previousBid"
	app_global_get
	>
	assert

	// examples/auction/auction.algo.ts:80
	// assert(this.txn.sender === payment.sender)
	txn Sender
	frame_dig -1 // payment: pay
	gtxns Sender
	==
	assert

	// Set global state
	// examples/auction/auction.algo.ts:83
	// this.previousBid.set(payment.amount)
	byte "previousBid"
	frame_dig -1 // payment: pay
	gtxns Amount
	app_global_put

	// examples/auction/auction.algo.ts:84
	// this.previousBidder.set(payment.sender)
	byte "previousBidder"
	frame_dig -1 // payment: pay
	gtxns Sender
	app_global_put

	// Update claimable amount
	// examples/auction/auction.algo.ts:87
	// this.claimableAmount.set(this.txn.sender, payment.amount)
	txn Sender
	byte "claimableAmount"
	frame_dig -1 // payment: pay
	gtxns Amount
	app_local_put
	retsub

abi_route_claimBids:
	byte 0x; dup
	callsub claimBids
	int 1
	return

claimBids:
	proto 2 0

	// examples/auction/auction.algo.ts:91
	// originalAmount = this.claimableAmount.get(this.txn.sender)
	txn Sender
	byte "claimableAmount"
	app_local_get
	frame_bury -1 // originalAmount: uint64

	// examples/auction/auction.algo.ts:92
	// amount = originalAmount
	frame_dig -1 // originalAmount: uint64
	frame_bury -2 // amount: uint64

	// subtract previous bid if sender is previous bidder
	// if0_condition
	// examples/auction/auction.algo.ts:95
	// this.txn.sender === this.previousBidder.get()
	txn Sender
	byte "previousBidder"
	app_global_get
	==
	bz if0_end

	// if0_consequent
	// examples/auction/auction.algo.ts:95
	// amount = amount - this.previousBid.get()
	frame_dig -2 // amount: uint64
	byte "previousBid"
	app_global_get
	-
	frame_bury -2 // amount: uint64

if0_end:
	// examples/auction/auction.algo.ts:97
	// this.pay(this.txn.sender, amount)
	// no dupn needed
	frame_dig -2 // amount: uint64
	txn Sender
	callsub pay

	// examples/auction/auction.algo.ts:98
	// this.claimableAmount.set(this.txn.sender, originalAmount - amount)
	txn Sender
	byte "claimableAmount"
	frame_dig -1 // originalAmount: uint64
	frame_dig -2 // amount: uint64
	-
	app_local_put
	retsub

abi_route_claim_asset:
	// no dupn needed
	txna ApplicationArgs 1
	btoi
	txnas Assets
	callsub claim_asset
	int 1
	return

claim_asset:
	proto 1 0

	// examples/auction/auction.algo.ts:102
	// assert(globals.latestTimestamp > this.auctionEnd.get())
	global LatestTimestamp
	byte "auctionEnd"
	app_global_get
	>
	assert

	// Send ASA to previous bidder
	// examples/auction/auction.algo.ts:105
	// sendAssetTransfer({
	itxn_begin
	int axfer
	itxn_field TypeEnum

	// examples/auction/auction.algo.ts:106
	// assetReceiver: this.previousBidder.get()
	byte "previousBidder"
	app_global_get
	itxn_field AssetReceiver

	// examples/auction/auction.algo.ts:107
	// xferAsset: asset
	frame_dig -1 // asset: asset
	itxn_field XferAsset

	// examples/auction/auction.algo.ts:108
	// assetAmount: this.asaAmt.get()
	byte "asaAmt"
	app_global_get
	itxn_field AssetAmount

	// examples/auction/auction.algo.ts:109
	// fee: 0
	int 0
	itxn_field Fee

	// examples/auction/auction.algo.ts:110
	// assetCloseTo: this.previousBidder.get()
	byte "previousBidder"
	app_global_get
	itxn_field AssetCloseTo
	itxn_submit
	retsub

abi_route_delete:
	// no dupn needed
	callsub delete
	int 1
	return

delete:
	proto 0 0

	// examples/auction/auction.algo.ts:116
	// sendPayment({
	itxn_begin
	int pay
	itxn_field TypeEnum

	// examples/auction/auction.algo.ts:117
	// fee: 0
	int 0
	itxn_field Fee

	// examples/auction/auction.algo.ts:118
	// receiver: globals.creatorAddress
	global CreatorAddress
	itxn_field Receiver

	// examples/auction/auction.algo.ts:119
	// closeRemainderTo: globals.creatorAddress
	global CreatorAddress
	itxn_field CloseRemainderTo

	// examples/auction/auction.algo.ts:120
	// amount: 0
	int 0
	itxn_field Amount
	itxn_submit
	retsub

create_NoOp:
	txn NumAppArgs
	switch abi_route_create
	err

call_NoOp:
	method "optIntoAsset(asset)void"
	method "startAuction(uint64,uint64,axfer)void"
	method "bid(pay)void"
	method "claimBids()void"
	method "claim_asset(asset)void"
	txna ApplicationArgs 0
	match abi_route_optIntoAsset abi_route_startAuction abi_route_bid abi_route_claimBids abi_route_claim_asset
	err

create_OptIn:
	err

call_OptIn:
	txn NumAppArgs
	switch abi_route_optIn
	err

create_DeleteApplication:
	err

call_DeleteApplication:
	txn NumAppArgs
	switch abi_route_delete
	err