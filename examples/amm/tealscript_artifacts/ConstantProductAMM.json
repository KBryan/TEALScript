{"hints":{},"schema":{"local":{"declared":{},"reserved":{}},"global":{"declared":{"governor":{"type":"bytes","key":"governor"},"assetA":{"type":"bytes","key":"assetA"},"assetB":{"type":"bytes","key":"assetB"},"poolToken":{"type":"bytes","key":"poolToken"},"ratio":{"type":"bytes","key":"ratio"}},"reserved":{}}},"source":{"approval":"","clear":"I3ByYWdtYSB2ZXJzaW9uIDgKaW50IDEKcmV0dXJu"},"contract":{"name":"ConstantProductAMM","desc":"","methods":[{"name":"set_governor","args":[{"name":"governor","type":"account","desc":""}],"desc":"","returns":{"type":"void","desc":""}},{"name":"bootstrap","args":[{"name":"seed","type":"pay","desc":""},{"name":"aAsset","type":"asset","desc":""},{"name":"bAsset","type":"asset","desc":""}],"desc":"","returns":{"type":"uint64","desc":""}},{"name":"mint","args":[{"name":"aXfer","type":"axfer","desc":""},{"name":"bXfer","type":"axfer","desc":""},{"name":"poolAsset","type":"asset","desc":""},{"name":"aAsset","type":"asset","desc":""},{"name":"bAsset","type":"asset","desc":""}],"desc":"","returns":{"type":"void","desc":""}},{"name":"burn","args":[{"name":"poolXfer","type":"axfer","desc":""},{"name":"poolAsset","type":"asset","desc":""},{"name":"aAsset","type":"asset","desc":""},{"name":"bAsset","type":"asset","desc":""}],"desc":"","returns":{"type":"void","desc":""}},{"name":"swap","args":[{"name":"swapXfer","type":"axfer","desc":""},{"name":"aAsset","type":"asset","desc":""},{"name":"bAsset","type":"asset","desc":""}],"desc":"","returns":{"type":"void","desc":""}}]}}