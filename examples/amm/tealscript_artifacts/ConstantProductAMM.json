{
  "hints": {
    "create()void": {
      "call_config": {
        "no_op": "CREATE"
      }
    },
    "set_governor(account)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "bootstrap(pay,asset,asset)uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "mint(axfer,axfer,asset,asset,asset)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "burn(axfer,asset,asset,asset)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "swap(axfer,asset,asset)void": {
      "call_config": {
        "no_op": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {
        "governor": {
          "type": "bytes",
          "key": "governor"
        },
        "assetA": {
          "type": "uint64",
          "key": "assetA"
        },
        "assetB": {
          "type": "uint64",
          "key": "assetB"
        },
        "poolToken": {
          "type": "uint64",
          "key": "poolToken"
        },
        "ratio": {
          "type": "uint64",
          "key": "ratio"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 1,
      "num_uints": 4
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDkKaW50IDE="
  },
  "contract": {
    "name": "ConstantProductAMM",
    "desc": "",
    "methods": [
      {
        "name": "create",
        "args": [],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "set_governor",
        "args": [
          {
            "name": "governor",
            "type": "account",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "bootstrap",
        "args": [
          {
            "name": "seed",
            "type": "pay",
            "desc": ""
          },
          {
            "name": "aAsset",
            "type": "asset",
            "desc": ""
          },
          {
            "name": "bAsset",
            "type": "asset",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "uint64",
          "desc": ""
        }
      },
      {
        "name": "mint",
        "args": [
          {
            "name": "aXfer",
            "type": "axfer",
            "desc": ""
          },
          {
            "name": "bXfer",
            "type": "axfer",
            "desc": ""
          },
          {
            "name": "poolAsset",
            "type": "asset",
            "desc": ""
          },
          {
            "name": "aAsset",
            "type": "asset",
            "desc": ""
          },
          {
            "name": "bAsset",
            "type": "asset",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "burn",
        "args": [
          {
            "name": "poolXfer",
            "type": "axfer",
            "desc": ""
          },
          {
            "name": "poolAsset",
            "type": "asset",
            "desc": ""
          },
          {
            "name": "aAsset",
            "type": "asset",
            "desc": ""
          },
          {
            "name": "bAsset",
            "type": "asset",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "swap",
        "args": [
          {
            "name": "swapXfer",
            "type": "axfer",
            "desc": ""
          },
          {
            "name": "aAsset",
            "type": "asset",
            "desc": ""
          },
          {
            "name": "bAsset",
            "type": "asset",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      }
    ]
  }
}