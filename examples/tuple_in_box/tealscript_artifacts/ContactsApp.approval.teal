#pragma version 8
	b main

bare_route_create:
	byte 0x
	dupn 1
	callsub create
	int 1
	return

create:
	proto 1 0
	retsub

abi_route_setMyContact:
	txn OnCompletion
	int NoOp
	==
	assert
	byte 0x
	dupn 2
	txna ApplicationArgs 2
	extract 2 0
	txna ApplicationArgs 1
	extract 2 0
	callsub setMyContact
	int 1
	return

setMyContact:
	proto 4 0

	// ./examples/tuple_in_box/app.ts:20
	// contact: [string, string] = [name, company]
	byte 0x // no static elements
	store 11 // static elements
	byte 0x0004 // head end
	store 8 // dynamic head
	int 4
	store 9 // dynamic head offset
	byte 0x
	store 10 // dynamic elements
	frame_dig -1 // name: bytes
	dup
	len
	itob
	extract 6 2
	swap
	concat
	dup
	len
	load 9 // dynamic head offset
	+
	dup
	store 9 // dynamic head offset
	itob
	extract 6 2
	load 8 // dynamic head
	swap
	concat
	store 8 // dynamic head
	load 10 // dynamic elements
	swap
	concat
	store 10 // dynamic elements
	frame_dig -2 // company: bytes
	dup
	len
	itob
	extract 6 2
	swap
	concat
	load 10 // dynamic elements
	swap
	concat
	store 10 // dynamic elements
	load 11 // static elements
	load 8 // dynamic head
	load 10 // dynamic elements
	concat
	concat
	frame_bury -3 // contact: [string,string]

	// ./examples/tuple_in_box/app.ts:22
	// this.myContact.put(contact)
	byte "myContact"
	frame_dig -3 // contact: [string,string]
	app_global_put

	// ./examples/tuple_in_box/app.ts:23
	// this.contacts.put(this.txn.sender, contact)
	txn Sender
	dup
	box_del
	pop
	frame_dig -3 // contact: [string,string]
	box_put
	retsub

abi_route_addContact:
	txn OnCompletion
	int NoOp
	==
	assert
	byte 0x
	dupn 2
	txna ApplicationArgs 3
	btoi
	txnas Accounts
	txna ApplicationArgs 2
	extract 2 0
	txna ApplicationArgs 1
	extract 2 0
	callsub addContact
	int 1
	return

addContact:
	proto 5 0

	// ./examples/tuple_in_box/app.ts:27
	// contact: [string, string] = [name, company]
	byte 0x // no static elements
	store 11 // static elements
	byte 0x0004 // head end
	store 8 // dynamic head
	int 4
	store 9 // dynamic head offset
	byte 0x
	store 10 // dynamic elements
	frame_dig -1 // name: bytes
	dup
	len
	itob
	extract 6 2
	swap
	concat
	dup
	len
	load 9 // dynamic head offset
	+
	dup
	store 9 // dynamic head offset
	itob
	extract 6 2
	load 8 // dynamic head
	swap
	concat
	store 8 // dynamic head
	load 10 // dynamic elements
	swap
	concat
	store 10 // dynamic elements
	frame_dig -2 // company: bytes
	dup
	len
	itob
	extract 6 2
	swap
	concat
	load 10 // dynamic elements
	swap
	concat
	store 10 // dynamic elements
	load 11 // static elements
	load 8 // dynamic head
	load 10 // dynamic elements
	concat
	concat
	frame_bury -4 // contact: [string,string]

	// ./examples/tuple_in_box/app.ts:28
	// this.contacts.put(address, contact)
	frame_dig -3 // address: account
	dup
	box_del
	pop
	frame_dig -4 // contact: [string,string]
	box_put
	retsub

abi_route_updateContactField:
	txn OnCompletion
	int NoOp
	==
	assert
	byte 0x
	dupn 1
	txna ApplicationArgs 3
	btoi
	txnas Accounts
	txna ApplicationArgs 2
	extract 2 0
	txna ApplicationArgs 1
	extract 2 0
	callsub updateContactField
	int 1
	return

updateContactField:
	proto 4 0

	// if0_condition
	// ./examples/tuple_in_box/app.ts:32
	// field === 'name'
	frame_dig -1 // field: bytes
	byte "name"
	==
	bz if0_elseif1_condition

	// if0_consequent
	// ./examples/tuple_in_box/app.ts:33
	// this.contacts.get(address)[0] = value
	frame_dig -3 // address: account
	box_get
	assert
	store 0 // full tuple
	load 0 // full tuple
	int 0 // head offset
	extract_uint16 // extract array offset
	store 1 // array offset
	load 0 // full tuple
	load 1 // array offset
	extract_uint16 // extract array length
	int 1
	* // array size
	int 2
	+ // array size + len
	store 2 // full array length
	frame_dig -2 // value: bytes
	dup
	len
	itob
	extract 6 2
	swap
	concat
	store 6 // new array
	load 0 // full tuple
	int 0
	int 0 // start of dynamic heads
	extract3
	store 3 // static part of tuple
	load 0 // full tuple
	extract 0 4
	store 4 // dynamic heads
	byte 0x
	dup
	store 5 // values after array
	store 7 // values before array
	load 0 // full tuple
	load 1 // array offset
	load 2 // full array length
	+
	load 0 // full tuple
	len
	substring3
	store 5 // values after array
	load 4 // dynamic heads
	byte 0x0000FFFF
	load 6 // new array
	len
	load 2 // full array length
	load 6 // new array
	len
	load 2 // full array length
	>=
	bnz skip_len_swap_1
	swap

skip_len_swap_1:
	-
	itob
	extract 6 2
	dup
	concat
	dup
	concat
	dup
	concat
	dup
	concat
	dup
	concat
	b&
	load 6 // new array
	len
	load 2 // full array length
	>=
	bnz sub_head_1
	b-
	b sub_or_add_head_end_1

sub_head_1:
	b+

sub_or_add_head_end_1:
	byte 0xFFFFFFFF
	b&
	store 4 // dynamic heads
	load 3 // static part of tuple
	load 4 // dynamic heads
	load 7 // values before array
	load 6 // new array
	load 5 // values after array
	concat
	concat
	concat
	concat
	frame_dig -3 // address: account
	dup
	box_del
	pop
	swap
	box_put
	b if0_end

if0_elseif1_condition:
	// ./examples/tuple_in_box/app.ts:34
	// field === 'company'
	frame_dig -1 // field: bytes
	byte "company"
	==
	bz if0_else

	// if0_elseif1_consequent
	// ./examples/tuple_in_box/app.ts:35
	// this.contacts.get(address)[1] = value
	frame_dig -3 // address: account
	box_get
	assert
	store 0 // full tuple
	load 0 // full tuple
	int 2 // head offset
	extract_uint16 // extract array offset
	store 1 // array offset
	load 0 // full tuple
	load 1 // array offset
	extract_uint16 // extract array length
	int 1
	* // array size
	int 2
	+ // array size + len
	store 2 // full array length
	frame_dig -2 // value: bytes
	dup
	len
	itob
	extract 6 2
	swap
	concat
	store 6 // new array
	load 0 // full tuple
	int 0
	int 0 // start of dynamic heads
	extract3
	store 3 // static part of tuple
	load 0 // full tuple
	extract 0 4
	store 4 // dynamic heads
	byte 0x
	dup
	store 5 // values after array
	store 7 // values before array
	load 0 // full tuple
	int 4 // head end
	load 1 // array offset
	substring3
	store 7 // values before array
	load 4 // dynamic heads
	byte 0x00000000
	load 6 // new array
	len
	load 2 // full array length
	load 6 // new array
	len
	load 2 // full array length
	>=
	bnz skip_len_swap_2
	swap

skip_len_swap_2:
	-
	itob
	extract 6 2
	dup
	concat
	dup
	concat
	dup
	concat
	dup
	concat
	dup
	concat
	b&
	load 6 // new array
	len
	load 2 // full array length
	>=
	bnz sub_head_2
	b-
	b sub_or_add_head_end_2

sub_head_2:
	b+

sub_or_add_head_end_2:
	byte 0xFFFFFFFF
	b&
	store 4 // dynamic heads
	load 3 // static part of tuple
	load 4 // dynamic heads
	load 7 // values before array
	load 6 // new array
	load 5 // values after array
	concat
	concat
	concat
	concat
	frame_dig -3 // address: account
	dup
	box_del
	pop
	swap
	box_put
	b if0_end

if0_else:
	// ./examples/tuple_in_box/app.ts:36
	// err()
	err

if0_end:
	retsub

abi_route_verifyContactName:
	txn OnCompletion
	int NoOp
	==
	assert
	byte 0x
	dupn 1
	txna ApplicationArgs 2
	btoi
	txnas Accounts
	txna ApplicationArgs 1
	extract 2 0
	callsub verifyContactName
	int 1
	return

verifyContactName:
	proto 3 0

	// ./examples/tuple_in_box/app.ts:40
	// assert(this.contacts.get(address)[0] === name)
	frame_dig -2 // address: account
	box_get
	assert
	store 0 // full tuple
	load 0 // full tuple
	int 0 // head offset
	extract_uint16 // extract array offset
	store 1 // array offset
	load 0 // full tuple
	load 1 // array offset
	extract_uint16 // extract array length
	int 1
	* // array size
	int 2
	+ // array size + len
	store 2 // full array length
	load 0 // full tuple
	load 1 // array offset
	load 2 // full array length
	extract3
	extract 2 0 // extract bytes from string
	frame_dig -1 // name: bytes
	==
	assert
	retsub

main:
	txn NumAppArgs
	bnz route_abi
	txn ApplicationID
	int 0
	==
	int 1
	match bare_route_create

route_abi:
	method "setMyContact(string,string)void"
	method "addContact(string,string,account)void"
	method "updateContactField(string,string,account)void"
	method "verifyContactName(string,account)void"
	txna ApplicationArgs 0
	match abi_route_setMyContact abi_route_addContact abi_route_updateContactField abi_route_verifyContactName