#pragma version 8
	b main

bare_route_create:
	byte 0x
	dupn 1
	callsub create
	int 1
	return

create:
	proto 1 0
	retsub

verifyMBRPayment:
	proto 3 0

	// examples/arc75/arc75.ts:14
	// assert(payment.amount === this.app.address.minBalance - preMBR)
	frame_dig -1 // payment: paytxn
	gtxns Amount
	txna Applications 0
	app_params_get AppAddress
	assert
	acct_params_get AcctMinBalance
	assert
	frame_dig -2 // preMBR: uint64
	-
	==
	assert

	// examples/arc75/arc75.ts:15
	// assert(payment.receiver === this.app.address)
	frame_dig -1 // payment: paytxn
	gtxns Receiver
	txna Applications 0
	app_params_get AppAddress
	assert
	==
	assert
	retsub

sendMBRPayment:
	proto 2 0

	// examples/arc75/arc75.ts:19
	// sendPayment({
	itxn_begin
	int pay
	itxn_field TypeEnum

	// examples/arc75/arc75.ts:20
	// sender: this.app.address
	txna Applications 0
	app_params_get AppAddress
	assert
	itxn_field Sender

	// examples/arc75/arc75.ts:21
	// receiver: this.txn.sender
	txn Sender
	itxn_field Receiver

	// examples/arc75/arc75.ts:22
	// amount: preMBR - this.app.address.minBalance
	frame_dig -1 // preMBR: uint64
	txna Applications 0
	app_params_get AppAddress
	assert
	acct_params_get AcctMinBalance
	assert
	-
	itxn_field Amount

	// examples/arc75/arc75.ts:23
	// fee: 0
	int 0
	itxn_field Fee
	itxn_submit
	retsub

abi_route_addCollectionToWhiteList:
	txn OnCompletion
	int NoOp
	==
	assert
	byte 0x
	dupn 5
	txn GroupIndex
	int 1
	-
	txna ApplicationArgs 2
	btoi
	txna ApplicationArgs 1
	callsub addCollectionToWhiteList
	int 1
	return

addCollectionToWhiteList:
	proto 8 0

	// examples/arc75/arc75.ts:36
	// preMBR = this.app.address.minBalance
	txna Applications 0
	app_params_get AppAddress
	assert
	acct_params_get AcctMinBalance
	assert
	frame_bury -4 // preMBR: uint64

	// examples/arc75/arc75.ts:37
	// key: [Account, uint16] = [this.txn.sender, id]
	txn Sender
	frame_dig -1 // id: uint16
	concat
	frame_bury -5 // key: [account,uint16]

	// if0_condition
	// examples/arc75/arc75.ts:39
	// this.whitelist.exists(key)
	frame_dig -5 // key: [account,uint16]
	box_get
	swap
	pop
	bz if0_else

	// if0_consequent
	// examples/arc75/arc75.ts:40
	// whitelist = this.whitelist.get(key)
	frame_dig -5 // key: [account,uint16]
	box_get
	assert
	frame_bury -6 // whitelist: uint64[]

	// examples/arc75/arc75.ts:41
	// this.whitelist.delete(key)
	frame_dig -5 // key: [account,uint16]
	box_del

	// examples/arc75/arc75.ts:43
	// whitelist.push(collection)
	frame_dig -6 // whitelist: uint64[]
	dup
	int 0
	extract_uint16
	int 1
	+
	itob
	extract 6 2
	swap
	extract 2 0
	concat
	frame_dig -2 // collection: uint64
	itob
	concat
	frame_bury -6 // whitelist: uint64[]

	// examples/arc75/arc75.ts:44
	// this.whitelist.put(key, whitelist)
	frame_dig -5 // key: [account,uint16]
	dup
	box_del
	pop
	frame_dig -6 // whitelist: uint64[]
	box_put
	b if0_end

if0_else:
	// examples/arc75/arc75.ts:46
	// whitelist: uint64[] = [collection]
	byte 0x0001
	frame_dig -2 // collection: uint64
	itob
	concat
	frame_bury -7 // whitelist: uint64[]

	// examples/arc75/arc75.ts:47
	// this.whitelist.put(key, whitelist)
	frame_dig -5 // key: [account,uint16]
	dup
	box_del
	pop
	frame_dig -7 // whitelist: uint64[]
	box_put

if0_end:
	// examples/arc75/arc75.ts:50
	// this.verifyMBRPayment(payment, preMBR)
	byte 0x
	dupn 1
	frame_dig -4 // preMBR: uint64
	frame_dig -3 // payment: paytxn
	callsub verifyMBRPayment
	retsub

abi_route_setCollectionWhitelist:
	txn OnCompletion
	int NoOp
	==
	assert
	byte 0x
	dupn 3
	txna ApplicationArgs 2
	txna ApplicationArgs 1
	callsub setCollectionWhitelist
	int 1
	return

setCollectionWhitelist:
	proto 5 0

	// examples/arc75/arc75.ts:62
	// preMBR = this.app.address.minBalance
	txna Applications 0
	app_params_get AppAddress
	assert
	acct_params_get AcctMinBalance
	assert
	frame_bury -3 // preMBR: uint64

	// examples/arc75/arc75.ts:63
	// key: [Account, uint16] = [this.txn.sender, id]
	txn Sender
	frame_dig -1 // id: uint16
	concat
	frame_bury -4 // key: [account,uint16]

	// examples/arc75/arc75.ts:65
	// this.whitelist.delete(key)
	frame_dig -4 // key: [account,uint16]
	box_del

	// examples/arc75/arc75.ts:67
	// this.whitelist.put(key, collections)
	frame_dig -4 // key: [account,uint16]
	dup
	box_del
	pop
	frame_dig -2 // collections: uint64[]
	box_put

	// if1_condition
	// examples/arc75/arc75.ts:69
	// preMBR > this.app.address.minBalance
	frame_dig -3 // preMBR: uint64
	txna Applications 0
	app_params_get AppAddress
	assert
	acct_params_get AcctMinBalance
	assert
	>
	bz if1_else

	// if1_consequent
	// examples/arc75/arc75.ts:70
	// this.sendMBRPayment(preMBR)
	byte 0x
	dupn 1
	frame_dig -3 // preMBR: uint64
	callsub sendMBRPayment
	b if1_end

if1_else:
	// examples/arc75/arc75.ts:72
	// this.verifyMBRPayment(this.txnGroup[this.txn.groupIndex - 1], preMBR)
	byte 0x
	dupn 1
	frame_dig -3 // preMBR: uint64
	txn GroupIndex
	int 1
	-
	callsub verifyMBRPayment

if1_end:
	retsub

abi_route_deleteWhitelist:
	txn OnCompletion
	int NoOp
	==
	assert
	byte 0x
	dupn 3
	txna ApplicationArgs 1
	callsub deleteWhitelist
	int 1
	return

deleteWhitelist:
	proto 4 0

	// examples/arc75/arc75.ts:83
	// preMBR = this.app.address.minBalance
	txna Applications 0
	app_params_get AppAddress
	assert
	acct_params_get AcctMinBalance
	assert
	frame_bury -2 // preMBR: uint64

	// examples/arc75/arc75.ts:84
	// key: [Account, uint16] = [this.txn.sender, id]
	txn Sender
	frame_dig -1 // id: uint16
	concat
	frame_bury -3 // key: [account,uint16]

	// examples/arc75/arc75.ts:86
	// this.whitelist.delete(key)
	frame_dig -3 // key: [account,uint16]
	box_del

	// examples/arc75/arc75.ts:88
	// this.sendMBRPayment(preMBR)
	byte 0x
	dupn 1
	frame_dig -2 // preMBR: uint64
	callsub sendMBRPayment
	retsub

abi_route_deleteCollectionFromWhitelist:
	txn OnCompletion
	int NoOp
	==
	assert
	byte 0x
	dupn 5
	txna ApplicationArgs 3
	btoi
	txna ApplicationArgs 2
	btoi
	txna ApplicationArgs 1
	callsub deleteCollectionFromWhitelist
	int 1
	return

deleteCollectionFromWhitelist:
	proto 8 0

	// examples/arc75/arc75.ts:100
	// preMBR = this.app.address.minBalance
	txna Applications 0
	app_params_get AppAddress
	assert
	acct_params_get AcctMinBalance
	assert
	frame_bury -4 // preMBR: uint64

	// examples/arc75/arc75.ts:101
	// key: [Account, uint16] = [this.txn.sender, id]
	txn Sender
	frame_dig -1 // id: uint16
	concat
	frame_bury -5 // key: [account,uint16]

	// examples/arc75/arc75.ts:103
	// whitelist = this.whitelist.get(key)
	frame_dig -5 // key: [account,uint16]
	box_get
	assert
	frame_bury -6 // whitelist: uint64[]

	// examples/arc75/arc75.ts:104
	// this.whitelist.delete(key)
	frame_dig -5 // key: [account,uint16]
	box_del

	// examples/arc75/arc75.ts:106
	// spliced = whitelist.splice(index, 1)
	frame_dig -6 // whitelist: uint64[]
	int 0
	extract_uint16
	int 1
	-
	itob
	extract 6 2
	frame_dig -3 // index: uint64
	int 8
	*
	int 2
	+
	store 12 // splice start
	int 1
	int 8
	*
	int 8
	+
	store 13 // splice byte length
	frame_dig -6 // whitelist: uint64[]
	int 2
	load 12 // splice start
	substring3
	frame_dig -6 // whitelist: uint64[]
	dup
	len
	load 12 // splice start
	load 13 // splice byte length
	+
	int 8
	-
	swap
	substring3
	concat
	concat
	int 1
	itob
	extract 6 2
	frame_dig -6 // whitelist: uint64[]
	load 12 // splice start
	load 13 // splice byte length
	int 8
	-
	extract3
	concat
	swap
	frame_bury -6 // whitelist: uint64[]
	frame_bury -7 // spliced: uint64[]

	// examples/arc75/arc75.ts:108
	// this.whitelist.put(key, whitelist)
	frame_dig -5 // key: [account,uint16]
	dup
	box_del
	pop
	frame_dig -6 // whitelist: uint64[]
	box_put

	// examples/arc75/arc75.ts:110
	// assert(spliced[0] === collection)
	frame_dig -7 // spliced: uint64[]
	int 0
	int 8
	*
	int 2
	+
	int 8
	extract3
	btoi
	frame_dig -2 // collection: uint64
	==
	assert

	// examples/arc75/arc75.ts:112
	// this.sendMBRPayment(preMBR)
	byte 0x
	dupn 1
	frame_dig -4 // preMBR: uint64
	callsub sendMBRPayment
	retsub

main:
	txn NumAppArgs
	bnz route_abi
	txn ApplicationID
	int 0
	==
	int 1
	match bare_route_create

route_abi:
	method "addCollectionToWhiteList(uint16,uint64,pay)void"
	method "setCollectionWhitelist(uint16,uint64[])void"
	method "deleteWhitelist(uint16)void"
	method "deleteCollectionFromWhitelist(uint16,uint64,uint64)void"
	txna ApplicationArgs 0
	match abi_route_addCollectionToWhiteList abi_route_setCollectionWhitelist abi_route_deleteWhitelist abi_route_deleteCollectionFromWhitelist