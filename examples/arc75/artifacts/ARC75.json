{
  "hints": {
    "addAppToWhiteList(string,uint16,uint64,pay)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "setAppWhitelist(string,uint16,uint64[])void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "deleteWhitelist(string,uint16)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "deleteAppFromWhitelist(string,uint16,uint64,uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "CREATE"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {},
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 0,
      "num_uints": 0
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKaW50IDEKcmV0dXJu"
  },
  "contract": {
    "name": "ARC75",
    "desc": "",
    "methods": [
      {
        "name": "addAppToWhiteList",
        "args": [
          {
            "name": "arc",
            "type": "string",
            "desc": ""
          },
          {
            "name": "boxIndex",
            "type": "uint16",
            "desc": ""
          },
          {
            "name": "appID",
            "type": "uint64",
            "desc": ""
          },
          {
            "name": "payment",
            "type": "pay",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "setAppWhitelist",
        "args": [
          {
            "name": "arc",
            "type": "string",
            "desc": ""
          },
          {
            "name": "boxIndex",
            "type": "uint16",
            "desc": ""
          },
          {
            "name": "appIDs",
            "type": "uint64[]",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "deleteWhitelist",
        "args": [
          {
            "name": "arc",
            "type": "string",
            "desc": ""
          },
          {
            "name": "boxIndex",
            "type": "uint16",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "deleteAppFromWhitelist",
        "args": [
          {
            "name": "arc",
            "type": "string",
            "desc": ""
          },
          {
            "name": "boxIndex",
            "type": "uint16",
            "desc": ""
          },
          {
            "name": "appID",
            "type": "uint64",
            "desc": ""
          },
          {
            "name": "index",
            "type": "uint64",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      }
    ]
  }
}