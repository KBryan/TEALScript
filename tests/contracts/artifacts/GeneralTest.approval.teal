#pragma version 9

txn ApplicationID
int 0
>
int 6
*
txn OnCompletion
+
switch create_NoOp NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED NOT_IMPLEMENTED call_NoOp

NOT_IMPLEMENTED:
	err

abi_route_txnTypeEnum:
	// no dupn needed
	callsub txnTypeEnum
	int 1
	return

txnTypeEnum:
	proto 0 0

	// tests/contracts/general.algo.ts:6
	// assert(this.txnGroup[0].typeEnum === TransactionType.Payment)
	int 0
	gtxns TypeEnum
	int pay
	==
	assert
	retsub

abi_route_txnGroupLength:
	// no dupn needed
	callsub txnGroupLength
	int 1
	return

txnGroupLength:
	proto 0 0

	// tests/contracts/general.algo.ts:10
	// return this.txnGroup.length;
	global GroupSize
	itob
	byte 0x151f7c75
	swap
	concat
	log
	retsub

abi_route_asserts:
	// no dupn needed
	txna ApplicationArgs 2
	int 0
	getbit
	txna ApplicationArgs 1
	int 0
	getbit
	callsub asserts
	int 1
	return

asserts:
	proto 2 0

	// tests/contracts/general.algo.ts:14
	// assert(arg1, arg2, arg1 === arg2)
	frame_dig -1 // arg1: bool
	assert
	frame_dig -2 // arg2: bool
	assert
	frame_dig -1 // arg1: bool
	frame_dig -2 // arg2: bool
	==
	assert
	retsub

abi_route_verifyTxnFromArg:
	// no dupn needed
	txn GroupIndex
	int 1
	-
	dup
	gtxns TypeEnum
	int pay
	==
	assert
	callsub verifyTxnFromArg
	int 1
	return

verifyTxnFromArg:
	proto 1 0

	// tests/contracts/general.algo.ts:18
	// verifyTxn(somePay, { receiver: this.app.address, amount: 100_000 })
	frame_dig -1 // somePay: pay

	// verify receiver
	gtxns Receiver
	txna Applications 0
	app_params_get AppAddress
	assert
	==
	assert

	// verify amount
	frame_dig -1 // somePay: pay
	gtxns Amount
	int 100_000
	==
	assert
	retsub

abi_route_verifyTxnFromTxnGroup:
	// no dupn needed
	callsub verifyTxnFromTxnGroup
	int 1
	return

verifyTxnFromTxnGroup:
	proto 0 0

	// tests/contracts/general.algo.ts:22
	// verifyTxn(this.txnGroup[0 + 1], { receiver: this.app.address, amount: 100_000 })
	int 0
	int 1
	+
	store 8 // verifyTxn index

	// verify receiver
	load 8 // verifyTxn index
	gtxns Receiver
	txna Applications 0
	app_params_get AppAddress
	assert
	==
	assert

	// verify amount
	load 8 // verifyTxn index
	gtxns Amount
	int 100_000
	==
	assert
	retsub

abi_route_verifyTxnCondition:
	// no dupn needed
	txn GroupIndex
	int 1
	-
	dup
	gtxns TypeEnum
	int pay
	==
	assert
	callsub verifyTxnCondition
	int 1
	return

verifyTxnCondition:
	proto 1 0

	// tests/contracts/general.algo.ts:26
	// verifyTxn(somePay, {
	frame_dig -1 // somePay: pay

	// verify receiver
	gtxns Receiver
	txna Applications 0
	app_params_get AppAddress
	assert
	==
	assert

	// verify amount
	frame_dig -1 // somePay: pay
	gtxns Amount
	int 1
	>
	assert
	frame_dig -1 // somePay: pay
	gtxns Amount
	int 10
	<=
	assert
	frame_dig -1 // somePay: pay
	gtxns Amount
	int 5
	!=
	assert
	retsub

abi_route_defaultTEALScriptCreate:
	int 1
	return

create_NoOp:
	txn NumAppArgs
	bz abi_route_defaultTEALScriptCreate
	err

call_NoOp:
	method "txnTypeEnum()void"
	method "txnGroupLength()uint64"
	method "asserts(bool,bool)void"
	method "verifyTxnFromArg(pay)void"
	method "verifyTxnFromTxnGroup()void"
	method "verifyTxnCondition(pay)void"
	txna ApplicationArgs 0
	match abi_route_txnTypeEnum abi_route_txnGroupLength abi_route_asserts abi_route_verifyTxnFromArg abi_route_verifyTxnFromTxnGroup abi_route_verifyTxnCondition
	err