{
  "hints": {
    "u64plus(uint64,uint64)uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "u64minus(uint64,uint64)uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "u64mul(uint64,uint64)uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "u64div(uint64,uint64)uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "u256plus(uint256,uint256)uint256": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "u256minus(uint256,uint256)uint256": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "u256mul(uint256,uint256)uint256": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "u256div(uint256,uint256)uint256": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "u64Return256(uint64,uint64)uint256": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "maxU64()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "btobigintFirst(string)uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "btobigintSecond(string)uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "exponent()uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "CREATE",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {},
      "reserved": {}
    },
    "global": {
      "declared": {
        "gKey": {
          "type": "uint64",
          "key": "gKey"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 0,
      "num_uints": 1
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 0
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDkKaW50IDE="
  },
  "contract": {
    "name": "MathTest",
    "desc": "",
    "methods": [
      {
        "name": "u64plus",
        "args": [
          {
            "name": "a",
            "type": "uint64",
            "desc": ""
          },
          {
            "name": "b",
            "type": "uint64",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "uint64",
          "desc": ""
        }
      },
      {
        "name": "u64minus",
        "args": [
          {
            "name": "a",
            "type": "uint64",
            "desc": ""
          },
          {
            "name": "b",
            "type": "uint64",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "uint64",
          "desc": ""
        }
      },
      {
        "name": "u64mul",
        "args": [
          {
            "name": "a",
            "type": "uint64",
            "desc": ""
          },
          {
            "name": "b",
            "type": "uint64",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "uint64",
          "desc": ""
        }
      },
      {
        "name": "u64div",
        "args": [
          {
            "name": "a",
            "type": "uint64",
            "desc": ""
          },
          {
            "name": "b",
            "type": "uint64",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "uint64",
          "desc": ""
        }
      },
      {
        "name": "u256plus",
        "args": [
          {
            "name": "a",
            "type": "uint256",
            "desc": ""
          },
          {
            "name": "b",
            "type": "uint256",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "uint256",
          "desc": ""
        }
      },
      {
        "name": "u256minus",
        "args": [
          {
            "name": "a",
            "type": "uint256",
            "desc": ""
          },
          {
            "name": "b",
            "type": "uint256",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "uint256",
          "desc": ""
        }
      },
      {
        "name": "u256mul",
        "args": [
          {
            "name": "a",
            "type": "uint256",
            "desc": ""
          },
          {
            "name": "b",
            "type": "uint256",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "uint256",
          "desc": ""
        }
      },
      {
        "name": "u256div",
        "args": [
          {
            "name": "a",
            "type": "uint256",
            "desc": ""
          },
          {
            "name": "b",
            "type": "uint256",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "uint256",
          "desc": ""
        }
      },
      {
        "name": "u64Return256",
        "args": [
          {
            "name": "a",
            "type": "uint64",
            "desc": ""
          },
          {
            "name": "b",
            "type": "uint64",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "uint256",
          "desc": ""
        }
      },
      {
        "name": "maxU64",
        "args": [],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "btobigintFirst",
        "args": [
          {
            "name": "input",
            "type": "string",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "uint64",
          "desc": ""
        }
      },
      {
        "name": "btobigintSecond",
        "args": [
          {
            "name": "input",
            "type": "string",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "uint64",
          "desc": ""
        }
      },
      {
        "name": "exponent",
        "args": [],
        "desc": "",
        "returns": {
          "type": "uint64",
          "desc": ""
        }
      }
    ]
  }
}